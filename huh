class CustomAppBar extends StatefulWidget implements PreferredSizeWidget {
  final double height;

  const CustomAppBar({Key? key, this.height = 80}) : super(key: key);

  @override
  _CustomAppBarState createState() => _CustomAppBarState();

  @override
  Size get preferredSize => Size.fromHeight(height);
}

class _CustomAppBarState extends State<CustomAppBar> {
  int userId = 0;

  @override
  void initState() {
    super.initState();
    _loadUserId();
  }

  Future<void> _loadUserId() async {
    final sharedPreferences = await SharedPreferences.getInstance();
    setState(() {
      userId = sharedPreferences.getInt('loggedUserId') ?? 0;
    });

    context.read<UserBloc>().add(LoadUserById(userId));
  }

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<UserBloc, UserState>(
      builder: (context, state) {
        if (state is UserInitial || state is UserUpdated) {
          context.read<UserBloc>().add(LoadUserById(userId));
        }

        String chipsBalance = "---";
        String firstNameLetter = "";
        if (state is UserLoaded) {
          chipsBalance = "${state.user.chips}";
          firstNameLetter = "${state.user.username[0]}";
        }
        return Container(
          height: widget.height,
          decoration: BoxDecoration(
            color: Color(0xFF21273e),
            boxShadow: [
              BoxShadow(
                color: Colors.black54,
                blurRadius: 3,
                spreadRadius: 2,
                offset: Offset(2, 2),
              ),
            ],
          ),

          padding: const EdgeInsets.symmetric(horizontal: 16),
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              GestureDetector(
                onTap: () {
                  context.go('/');
                },
                child: Container(
                  child: Image.asset(
                    'assets/images/logo.png',
                    fit: BoxFit.fill,
                    height: 45,
                    width: 90,
                  ),
                ),
              ),
              Container(
                width: 170,
                height: 40,
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: [
                    Container(
                      width: 120,
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(10),
                        color: Colors.grey,
                      ),
                      child: Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          GestureDetector(
                            onTap: () {
                              context.go('/shop');
                            },
                            child: SizedBox(
                              height: 40,
                              width: 40,
                              child: Padding(
                                padding: const EdgeInsets.all(8.0),
                                child: Image.asset(
                                  'assets/images/elements/currency.png',
                                  fit: BoxFit.contain,
                                ),
                              ),
                            ),
                          ),
                          Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Countup(
                              begin: 0.0,
                              end:
                                  (chipsBalance != "---")
                                      ? double.tryParse(chipsBalance) ?? 0.0
                                      : 0.0,
                              duration: Duration(seconds: 3),
                              style: TextStyle(
                                color: Colors.black,
                                fontWeight: FontWeight.bold,
                                fontSize: 16,
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                    Spacer(),
                    GestureDetector(
                      onTap: () {
                        // Navigate to profile using GoRouter
                        context.go('/user_page/${userId}');
                      },
                      child: CircleAvatar(child: Text(firstNameLetter)),
                      // child: CircleAvatar(
                      //   backgroundColor: Colors.blue,
                      //   radius: 20,
                      //   child: ClipOval(
                      //     child: Image.asset(
                      //       'assets/images/user/nobita.png',
                      //       fit: BoxFit.cover,
                      //       height: 45,
                      //       width: 45,
                      //     ),
                      //   ),
                      // ),
                    ),
                  ],
                ),
              ),
            ],
          ),
        );
      },
    );
  }
}
