import 'package:connectivity_plus/connectivity_plus.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:wifi/utils/ConnectionStatus.dart';

class ConnectionCubit extends Cubit<Connectionstatus> {
  final Connectivity _connection = Connectivity();

  ConnectionCubit() : super(Connectionstatus.loading);

  void monitorConnection() {
    _connection.onConnectivityChanged.listen((
      List<ConnectivityResult> results,
    ) {
      if (results.contains(ConnectivityResult.wifi)) {
        emit(Connectionstatus.connectedToWifi);
      } else if (results.contains(ConnectivityResult.mobile)) {
        emit(Connectionstatus.connectedToMobile);
      } else {
        emit(Connectionstatus.noInternetConnection);
      }
    });
  }
}


void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
      ),
      home: BlocProvider(create: (_) => ConnectionCubit(), child: HomePage()),
    );
  }
}


class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: BlocBuilder<ConnectionCubit, Connectionstatus>(
        builder: (context, state) {
          if (state == Connectionstatus.loading) {
            return Center(child: CircularProgressIndicator());
          } else if (state == Connectionstatus.connectedToWifi) {
            return Center(child: Text('Connected to WiFi'));
          } else if (state == Connectionstatus.connectedToMobile) {
            return Center(child: Text('Connected to Mobile Data'));
          } else if (state == Connectionstatus.noInternetConnection) {
            return Center(child: Text('No Internet Connection'));
          }
          return SizedBox();
        },
      ),
    );
  }
}

enum Connectionstatus {
  loading,
  connectedToWifi,
  connectedToMobile,
  noInternetConnection,
}



The argument type 'void Function(ConnectivityResult)' can't be assigned to the parameter type 'void Function(List<ConnectivityResult>)?'. dartargument_type_not_assignable
Connectionstatus get connectedToWifi
Type: Connectionstatus

package:wifi/utils/ConnectionStatus.dart



import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:wifi/bloc/connection_cubit.dart';
import 'package:wifi/utils/ConnectionStatus.dart';

class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  bool showLoading = false;

  @override
  void initState() {
    super.initState();
    Future.delayed(Duration(seconds: 100), () {
      setState(() {
        showLoading = true;
      });
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: BlocBuilder<ConnectionCubit, Connectionstatus>(
        builder: (context, state) {
          if (state == Connectionstatus.loading) {
            return Center(child: CircularProgressIndicator());
          } else if (state == Connectionstatus.connectedToWifi) {
            return Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Container(
                    height: 150,
                    width: 150,
                    child: Image.asset(
                      'assets/images/wifi.png',
                      fit: BoxFit.contain,
                    ),
                  ),
                  Text(
                    'Connected to Wifi',
                    style: TextStyle(fontSize: 20, color: Colors.white),
                  ),
                ],
              ),
            );
          } else if (state == Connectionstatus.connectedToMobile) {
            return Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Container(
                    height: 150,
                    width: 150,
                    child: Image.asset(
                      'assets/images/mobile_data.png',
                      fit: BoxFit.contain,
                    ),
                  ),
                  Text(
                    'Connected to Mobile Data',
                    style: TextStyle(fontSize: 20, color: Colors.white),
                  ),
                ],
              ),
            );
          } else if (state == Connectionstatus.noInternetConnection) {
            return Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Container(
                    height: 150,
                    width: 150,
                    child: Image.asset(
                      'assets/images/no_connection.png',
                      fit: BoxFit.contain,
                    ),
                  ),
                  Text(
                    'No Internet Connection',
                    style: TextStyle(fontSize: 20, color: Colors.white),
                  ),
                ],
              ),
            );
          }
          return SizedBox();
        },
      ),
    );
  }
}

