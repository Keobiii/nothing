ElevatedButton( onPressed: () { context.read<UserBloc>().add( UpdateUserCollection( userId: widget.userId, collectionIds: [1], ), ); }, child: const Text('Add Collection'), ), bloc Future<void> _onUpdateUserCollection( UpdateUserCollection event, Emitter<UserState> emit, ) async { emit(UserLoading()); try { await authRepository.updateUserCollection( event.userId, event.collectionIds, ); add(LoadUserById(event.userId)); emit(UserUpdated()); } catch (e) { emit(UserFailedUpdate(e.toString())); print(e.toString()); } } repo Future<void> updateUserCollection(int userId, List<int> collectionIds) async { await _authLocalDataSource.updateUserCollection(userId, collectionIds); } data source Future<void> updateUserCollection(int userId, List<int> collectionIds) async { final user = userBox.get(userId); if (user == null) { throw Exception('User with ID $userId not found.'); } try { user.collectionIds = collectionIds; await userBox.put(userId, user); } catch (e) { throw Exception('Failed to update collection: ${e.toString()}'); } } i want to allow the user to input collection manually, but in the hive the collection is set to a list. my idea is the function accepts int parameter then all the int will be stored in list and use that to put in database. what do you think??
