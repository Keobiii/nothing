@Composable
fun ActionsIU(
    actionIcon: ImageVector,
    actionTitle: String
) {
    var showBottomSheet by remember { mutableStateOf(false) }

    if (showBottomSheet) {

        CustomBottomSheetDialog(showBottomSheet)
    }

    Column(
        modifier = Modifier
            .clickable{
                showBottomSheet = true
            },
        verticalArrangement = Arrangement.Center,
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Box(
            modifier = Modifier
                .clip(RoundedCornerShape(10.dp))
                .background(MaterialTheme.colorScheme.background)
                .padding(5.dp)
        ) {
            Icon(
                modifier = Modifier.size(25.dp),
                imageVector = actionIcon,
                contentDescription = actionTitle,
                tint = MaterialTheme.colorScheme.onBackground
            )
        }

        Text(
            modifier = Modifier.padding(top = 5.dp),
            text = actionTitle,
            fontSize = 12.sp,
            fontWeight = FontWeight.SemiBold,
            color = Color.White
        )
    }
}



@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun CustomBottomSheetDialog(showBottomSheet: Boolean) {
    val sheetState = rememberModalBottomSheetState()
    val scope = rememberCoroutineScope()
    var showBottomSheet = showBottomSheet

    if (showBottomSheet) {
        ModalBottomSheet(
            onDismissRequest = {
                showBottomSheet = false
            },
            sheetState = sheetState
        ) {
            // Bottom sheet content
            Button(onClick = {
                scope.launch { sheetState.hide() }.invokeOnCompletion {
                    if (!sheetState.isVisible) {
                        showBottomSheet = false
                    }
                }
            }) {
                Text("Hide bottom sheet")
            }
        }
    }
}
